125. Valid Palindrome
Easy
5.4K
6.3K
Companies

A phrase is a palindrome if, after converting all uppercase letters into lowercase letters and removing all non-alphanumeric characters, it reads the same forward and backward. Alphanumeric characters include letters and numbers.

Given a string s, return true if it is a palindrome, or false otherwise.

 

Example 1:

Input: s = "A man, a plan, a canal: Panama"
Output: true
Explanation: "amanaplanacanalpanama" is a palindrome.

Example 2:

Input: s = "race a car"
Output: false
Explanation: "raceacar" is not a palindrome.

Example 3:

Input: s = " "
Output: true
Explanation: s is an empty string "" after removing non-alphanumeric characters.
Since an empty string reads the same forward and backward, it is a palindrome.

 

Constraints:

    1 <= s.length <= 2 * 105
    s consists only of printable ASCII characters.

Accepted
1.7M
Submissions
3.8M
Acceptance Rate
43.7%
.
.
.
.
.
.
.
.
class Solution {
public:
    void convert(string &s){
        for(int i = 0; i<s.size(); i++){
            cout<<s[i]<<endl;
            if((int)s[i]>=65 && (int)s[i]<=90){
                // int x = 'a' - s[i];
                // cout<<x;
                int y = s[i]-'A';
                // cout<<y; 
                s[i] = 'a' + y;
                // cout<<s[i]<<endl;
            }
        }
    }
    int remove(char ch){
        // for(int i = 0; i<s.size(); i++){
        
        if( (ch >= 'a' && ch <= 'z') || (ch >= 'A' && ch <= 'Z') || (ch >= '0' && ch <= '9'))
        {
            return 1;
        }
        return 0;
    
        
    // }
    }
    bool check(string &s){
        int i = 0,j = s.size()-1;

        while(i<j){
            if(s[i] != s[j])
            return false;

            i++;
            j--;
        }

        return true;
    }

    bool isPalindrome(string s) {


        string k = "";
        // remove(k);
        for(int i = 0; i<s.size(); i++){
            if(remove(s[i])){
                k.push_back(s[i]);
            }
        }
        // cout<<k<<endl;
        convert(k);

        return check(k);

        
    }
};
